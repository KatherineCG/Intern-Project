''' CAT 'deliverable' library
Created on Aug 28, 2016

@author: kaiyuanli
'''
from catdata import CatData
from Common.cat.lib.catApi import queryCatInfo
from Common.cat.lib.jsonHandler import getId, getValue
from Common.utils.logger import getLogger

logger = getLogger()

class Deliverable(CatData):
   """Single Deliverable data
   """
   _objType = 'deliverable'
   _leafNode = True
   _subDataMap = {}

   def initCatRawInfo(self):
      super(Deliverable, self).initCatRawInfo()

      self._location = self._catObj['location']['name']
      self._ready = self.getValueFromCatObj('ready')
      self._result = self.getValueFromCatObj('result')
      self._deleted = self.getValueFromCatObj('deleted')
      self._builderId = self.getIdFromCatObj('builder')

      self._buildObj = self._catObj['build']
      self._buildId = getId(self._buildObj)
      self._cln = getValue(self._buildObj, 'changeset')

   def getChangeset(self):
      return self._cln

   def getLocation(self):
      return self._location

   def getReadyStatus(self):
      return self._ready

   def getDeliverableResult(self):
      return self._result

   def getDeleted(self):
      return self._deleted

   def getBuildId(self):
      return self._buildId

   def getBuilderId(self):
      return self._builderId

   @staticmethod
   def getDeliverablesByBuilder(builderId, limitDay=1):
      retObjs = queryCatInfo('deliverable', {'builder': builderId},
                             orderBy='-endtime', limitDay=7)

      if not retObjs:
         raise Exception("No CAT deliverable generated from builder %d "
                         "in the last %d days", builderId, limitDay)
      else:
         deliverableIds = [getId(retObj, 'id') for retObj in retObjs]
         return Deliverable.getFullyInitializedCatObjectList(deliverableIds)

   @staticmethod
   def getDeliverablesByBuild(buildId):
      retObjs = queryCatInfo('deliverable', {'build': buildId})

      if not retObjs:
         raise Exception("No CAT deliverable generated by CAT build %d" % buildId)
      else:
         deliverableIds = [getId(retObj, 'id') for retObj in retObjs]
         return Deliverable.getFullyInitializedCatObjectList(deliverableIds)


"""Below code is for test purpose
"""
if __name__ == '__main__':

   def printDeliverableData(datas):
      for data in datas:
         print("%s, CLN: %s, Result: %s, Builder: %s, Build: %s" % (
                str(data), data.getChangeset(), data.getDeliverableResult(),
                data.getBuilderId(), data.getBuildId()))

   deliverableIds = [7341681, 7351209, 7353342]
   deliverableDatas = Deliverable.getFullyInitializedCatObjectList(deliverableIds)
   printDeliverableData(deliverableDatas)

   print("\nTesting getDeliverablesByBuilder function")
   deliverableDatas = Deliverable.getDeliverablesByBuilder(107, limitDay=1)
   printDeliverableData(deliverableDatas)

   print("\nTesting getDeliverablesByBuild function")
   buildId = deliverableDatas[0].getBuildId()
   deliverableDatas = Deliverable.getDeliverablesByBuild(buildId)
   printDeliverableData(deliverableDatas)
